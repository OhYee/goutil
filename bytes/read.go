// Code generated by GCG. DO NOT EDIT.
// Go Code Generator 0.0.8 (https://github.com/OhYee/gcg)

package bytes

import (
	"io"
)

// ReadInt8 read an int8 value
func ReadInt8(r io.Reader) (v int8, err error) {
	b, err := ReadNBytes(r, 1)
	if err != nil {
		return
	}
	v = ToInt8(b)
	return
}

// ReadUint8 read an uint8 value
func ReadUint8(r io.Reader) (v uint8, err error) {
	b, err := ReadNBytes(r, 1)
	if err != nil {
		return
	}
	v = ToUint8(b)
	return
}

// ReadInt16 read an int16 value
func ReadInt16(r io.Reader) (v int16, err error) {
	b, err := ReadNBytes(r, 2)
	if err != nil {
		return
	}
	v = ToInt16(b)
	return
}

// ReadUint16 read an uint16 value
func ReadUint16(r io.Reader) (v uint16, err error) {
	b, err := ReadNBytes(r, 2)
	if err != nil {
		return
	}
	v = ToUint16(b)
	return
}

// ReadInt32 read an int32 value
func ReadInt32(r io.Reader) (v int32, err error) {
	b, err := ReadNBytes(r, 4)
	if err != nil {
		return
	}
	v = ToInt32(b)
	return
}

// ReadUint32 read an uint32 value
func ReadUint32(r io.Reader) (v uint32, err error) {
	b, err := ReadNBytes(r, 4)
	if err != nil {
		return
	}
	v = ToUint32(b)
	return
}

// ReadInt64 read an int64 value
func ReadInt64(r io.Reader) (v int64, err error) {
	b, err := ReadNBytes(r, 8)
	if err != nil {
		return
	}
	v = ToInt64(b)
	return
}

// ReadUint64 read an uint64 value
func ReadUint64(r io.Reader) (v uint64, err error) {
	b, err := ReadNBytes(r, 8)
	if err != nil {
		return
	}
	v = ToUint64(b)
	return
}

// ReadFloat32 read a float32 value
func ReadFloat32(r io.Reader) (v float32, err error) {
	b, err := ReadNBytes(r, 4)
	if err != nil {
		return
	}
	v = ToFloat32(b)
	return
}

// ReadFloat64 read a float64 value
func ReadFloat64(r io.Reader) (v float64, err error) {
	b, err := ReadNBytes(r, 8)
	if err != nil {
		return
	}
	v = ToFloat64(b)
	return
}
